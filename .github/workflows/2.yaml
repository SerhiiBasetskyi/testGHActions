name: Deploy AAA to 2222

on:
  workflow_dispatch:
    inputs:
      enable_param1:
        type: boolean
        description: 'Enable param1AAAAAAAAA'
        default: true
      enable_param2:
        type: boolean
        description: 'Enable param2'
        default: true
      enable_param3:
        type: boolean
        description: 'Enable param3'
        default: true

jobs:
  set-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Print input
        run: echo "Environment is ${{ inputs.enable_param1 }}"    
      - name: Set Matrix
        id: set-matrix
        run: |
          import json
          import os

          matrix = {"include": []}

          if os.getenv("GITHUB_EVENT_INPUTS_ENABLE_PARAM1") == "true":
              matrix["include"].append({"param_name": "param1"})
          if os.getenv("GITHUB_EVENT_INPUTS_ENABLE_PARAM2") == "true":
              matrix["include"].append({"param_name": "param2"})
          if os.getenv("GITHUB_EVENT_INPUTS_ENABLE_PARAM3") == "true":
              matrix["include"].append({"param_name": "param3"})

          with open(os.getenv("GITHUB_OUTPUT"), "a") as f:
              f.write(f"matrix={json.dumps(matrix)}\n")
        shell: python

  deploy:
    needs: set-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.set-matrix.outputs.matrix) }}
    name: Deploying ${{ matrix.param_name }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      
      - name: Deploy with Parameter
        run: |
          echo "Deploying with ${{ matrix.param_name }}"
          # Add your deployment script here for ${{ matrix.param_name }}